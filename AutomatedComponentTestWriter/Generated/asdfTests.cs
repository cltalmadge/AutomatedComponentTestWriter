//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoGeneratedTests
{
    using System;
    using System.Net;
    using Newtonsoft.Json;
    using System.Threading.Tasks;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    
    
    public class asdfUnitTests
    {
        
        [TestMethod()]
        [TestCategory("Integration")]
        public async Task AutoGeneratedUnitTest_A()
        {
            var _uri = "";
            var request = new asdf();
            asdf.sales.ManagerID = 623978428;
            var response = await ApiActions.Post(_uri, request).ConfigureAwait(false);
            var errormessage = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
            Assert.AreEqual(HttpStatusCode.BadRequest, response.StatusCode);
            Assert.IsNotNull(errormessage);
            var guidstring = JsonConvert.ToString(errormessage);
            Assert.IsTrue(guidstring.Contains(@""));
        }
        
        [TestMethod()]
        [TestCategory("Integration")]
        public async Task AutoGeneratedUnitTest_B()
        {
            var _uri = "";
            var request = new asdf();
            asdf.sales.saleID = "Ste7RrE67hWRra00NXWDxB";
            var response = await ApiActions.Post(_uri, request).ConfigureAwait(false);
            var errormessage = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
            Assert.AreEqual(HttpStatusCode.NotFound, response.StatusCode);
            Assert.IsNotNull(errormessage);
            var guidstring = JsonConvert.ToString(errormessage);
            Assert.IsTrue(guidstring.Contains(@""));
        }
        
        [TestMethod()]
        [TestCategory("Integration")]
        public async Task AutoGeneratedUnitTest_C()
        {
            var _uri = "";
            var request = new asdf();
            asdf.sales.Amount = 962730869150735630338835.1961M;
            var response = await ApiActions.Post(_uri, request).ConfigureAwait(false);
            var errormessage = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
            Assert.AreEqual(HttpStatusCode.OK, response.StatusCode);
            Assert.IsNotNull(errormessage);
            var guidstring = JsonConvert.ToString(errormessage);
            Assert.IsTrue(guidstring.Contains(@""));
        }
    }
}
